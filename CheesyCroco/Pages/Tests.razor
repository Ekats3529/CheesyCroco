@page "/tests"
@using CheesyCroco.Data.Models
@using CheesyCroco.Data.Services
@inject TestService testService

<PageTitle>Tests</PageTitle>

<h1>Cheesy Croco Tests</h1>


@* <p>There is the test list.</p> *@

@if (tests == null)
{
    <p><em>Loading...</em></p>
}
else
{
    @*   <meta> @tests.Length <meta>
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Test pass number</th>
                <th>Test rate</th>
                <th>Number of questions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var test in tests)
            {
                <tr>
                    <td>
                        <NavLink class="btn btn-square" href="testpage">@test.name</NavLink>
                    </td>
                    <td>@test.passCounter</td>
                    <td>@GetTestRate(test.rateSum, test.rateNum)</td>
                    <td>@test.questionsNum</td>
                </tr>
            }
        </tbody>
    </table> *@
    @for (int i = 0; i <= tests.Count() / 4; i++)
    {
        <div class="tests_row">
            @for (int j = 0; j < 4; j++)
            {
                @if (i * 4 + j >= tests.Count())
                {
                    break;
                }
                string tmp = "testpage/" + @tests[i + j].Id;
                <div class="test_item" onclick="location.href='@tmp';">
                    <img src="@tests[i * 4 + j].imagePath">
                    <div class="test_item-title">
                        <h3>
                            @tests[i * 4 + j].name
                        </h3>
                    </div>
                    <div class="test_item-bottom">
                        <div class="test_item-questionsNum" title="Количество вопросов">@tests[i * 4 + j].questionsNum</div>
                        <div class="test_item-rating" title="Оценка по 10-бальной шкале" placeholder="0.00">@GetTestRate(tests[i * 4 + j].rateSum, tests[i * 3 + j].rateNum)</div>
                        <div class="test_item-passes" title="Количество прохождений">@tests[i * 4 + j].passCounter</div>
                    </div>
                    
                    
                </div>
            }
        </div>
    }
   
}


@code {
    private List<Test> tests;

    protected string GetTestRate(int a, int b)
    {
        double number = 1.0 * a / b;
        string formattedNumber = number.ToString("0.00");
        return formattedNumber;
    }

    protected override async Task OnInitializedAsync()
    {
        tests = testService.GetAll();
    }
}