@page "/testpage"
@using CheesyCroco.Data.Models
@using CheesyCroco.Data.Services
@inject QuestionService questionService
@inject AnswerService answerService

<PageTitle>Tests</PageTitle>

<h1>Cheesy Croco Tests</h1>


@if (questions == null || answers == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="questions">
    <ul> 
        @foreach (var question in questions)
        {
            
            <li>
                <td>@question.text</td>  
                @foreach (var answer in answers)
                {
                        if (answer.questionId == question.Id)
                    {
                        <div class="answer_option">
                            <button id="answer_option" class="btn btn-primary" @onclick="@(()=>attemptRates[question.questionIndex] = answer.score)">
                                @answer.text
                            </button>
                        </div>
                        
                    }
                }
            </li>
        }
    </ul>
    </div>
    <div class="result">
        <button class="btn btn-primary">
            Узнать результат
            @attemptRates[0]
            @attemptRates[1]
            @attemptRates[2]
        </button>
    </div>
    
}



@code {
    private Question[] questions;
    private Answer[] answers;
    private Result[] results;
    private int[] attemptRates;

    protected override async Task OnInitializedAsync()
    {
        if (questionService.connect() && answerService.connect()) //&& resultService.connect())
        {
            questions = await questionService.GetTestAsync();
            answers = await answerService.GetTestAsync();
            // results = await resultService.GetTestAsync();
            attemptRates = new int[questions.Length];
        }
        else
        {
            questions = await Task.FromResult(Enumerable.Range(1, 5).Select(index => new Question
                {
                    text = "",
                    testId = "",
                    answersNum = 0,
                    questionIndex = 0

                }).ToArray());

        }
    }


   
}
